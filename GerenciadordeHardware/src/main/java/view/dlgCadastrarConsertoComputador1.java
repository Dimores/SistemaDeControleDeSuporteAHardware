
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view;

import controller.ConsertoComputadorController;
import controller.PecaController;
import controller.ServicoController;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import model.Cliente;
import model.ConsertoComputador;
import utils.Data;
import model.Peca;
import model.Tecnico;
import model.exceptions.ServicoException;
import utils.Email;
import utils.NtpTimeClient;
import utils.PublicIP;

/**
 *
 * @author diego
 */
public class dlgCadastrarConsertoComputador1 extends javax.swing.JDialog {
    ServicoController servicoController;
    ConsertoComputadorController consertoController;
    PecaController pecaController;
    private Long idConsertoComputadorEditando;
    private String data;
    List<Peca> pecasSelecionadas;
    
    dlgSelecaoCliente telaSelecaoCliente;
    dlgSelecaoTecnico telaSelecaoTecnico;
    dlgSelecaoPeca telaSelecaoPeca;
    
    Cliente clienteSelecionado;
    Tecnico tecnicoSelecionado;

    // O preço do conserto vai ser sempre 100 + o preço das Peças.
    private float preco = 100;
    
    /**
     * Creates new form dlgCadastrarConcertoComputador
     * @param parent
     * @param modal
     */
    public dlgCadastrarConsertoComputador1(java.awt.Dialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
        servicoController = new ServicoController();
        idConsertoComputadorEditando = -1L;
        
        consertoController = new ConsertoComputadorController();
        
        pecasSelecionadas = new ArrayList();

        data = Data.pegaDataSistema();
        
        consertoController.atualizarTabela(grdComputadores);
        
        clienteSelecionado = new Cliente();
        tecnicoSelecionado = new Tecnico();
        
        telaSelecaoCliente = new dlgSelecaoCliente(this, true);
        telaSelecaoTecnico = new dlgSelecaoTecnico(this, true);
        telaSelecaoPeca = new dlgSelecaoPeca(this, true);
        
        // Setando o preco inicial
        edtValor.setText(String.valueOf(preco));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panFundo = new javax.swing.JPanel();
        lblTitulo1 = new javax.swing.JLabel();
        panPreencher = new javax.swing.JPanel();
        edtValor = new view.graphicElements.TextField();
        edtDescricaoProblema = new view.graphicElements.TextField();
        edtCliente = new view.graphicElements.TextField();
        edtPeca = new view.graphicElements.TextField();
        chkConcluido = new view.graphicElements.JCheckBoxCustom();
        edtTecnico = new view.graphicElements.TextField();
        chkPago = new view.graphicElements.JCheckBoxCustom();
        panTodosBotoes = new javax.swing.JPanel();
        btnEditar = new view.graphicElements.BotaoVermelho();
        btnExcluir = new view.graphicElements.BotaoVermelho();
        btnCancelar = new view.graphicElements.BotaoVermelho();
        btnConfirmar = new view.graphicElements.BotaoVermelho();
        btnNovo = new view.graphicElements.BotaoVermelho();
        jScrollPane3 = new javax.swing.JScrollPane();
        grdComputadores = new view.graphicElements.TableDark();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        panFundo.setBackground(new java.awt.Color(20, 20, 20));

        lblTitulo1.setBackground(new java.awt.Color(20, 20, 20));
        lblTitulo1.setFont(new java.awt.Font("Segoe UI", 0, 44)); // NOI18N
        lblTitulo1.setForeground(new java.awt.Color(251, 251, 251));
        lblTitulo1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo1.setText("Cadastrar Conserto de Computador");

        panPreencher.setForeground(new java.awt.Color(0, 0, 0));
        panPreencher.setOpaque(false);

        edtValor.setEditable(false);
        edtValor.setBackground(new java.awt.Color(20, 20, 20));
        edtValor.setForeground(new java.awt.Color(251, 251, 251));
        edtValor.setLabelText("Preço");
        edtValor.setLabelTextColor(new java.awt.Color(251, 251, 251));
        edtValor.setLineColor(new java.awt.Color(229, 9, 20));
        edtValor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edtValorActionPerformed(evt);
            }
        });

        edtDescricaoProblema.setBackground(new java.awt.Color(20, 20, 20));
        edtDescricaoProblema.setForeground(new java.awt.Color(251, 251, 251));
        edtDescricaoProblema.setLabelText("Descrição");
        edtDescricaoProblema.setLabelTextColor(new java.awt.Color(251, 251, 251));
        edtDescricaoProblema.setLineColor(new java.awt.Color(229, 9, 20));

        edtCliente.setEditable(false);
        edtCliente.setBackground(new java.awt.Color(20, 20, 20));
        edtCliente.setForeground(new java.awt.Color(251, 251, 251));
        edtCliente.setText("Clique aqui para adicionar um Cliente.");
        edtCliente.setLabelText("Cliente");
        edtCliente.setLabelTextColor(new java.awt.Color(251, 251, 251));
        edtCliente.setLineColor(new java.awt.Color(229, 9, 20));
        edtCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                edtClienteFocusGained(evt);
            }
        });
        edtCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                edtClienteMousePressed(evt);
            }
        });
        edtCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edtClienteActionPerformed(evt);
            }
        });

        edtPeca.setEditable(false);
        edtPeca.setBackground(new java.awt.Color(20, 20, 20));
        edtPeca.setForeground(new java.awt.Color(251, 251, 251));
        edtPeca.setText("Clique aqui para adicionar uma ou mais Peça(s).");
        edtPeca.setLabelText("Peça(s)");
        edtPeca.setLabelTextColor(new java.awt.Color(251, 251, 251));
        edtPeca.setLineColor(new java.awt.Color(229, 9, 20));
        edtPeca.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                edtPecaMouseClicked(evt);
            }
        });

        chkConcluido.setBackground(new java.awt.Color(251, 251, 251));
        chkConcluido.setForeground(new java.awt.Color(251, 251, 251));
        chkConcluido.setText("Concluido");
        chkConcluido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkConcluidoActionPerformed(evt);
            }
        });

        edtTecnico.setEditable(false);
        edtTecnico.setBackground(new java.awt.Color(20, 20, 20));
        edtTecnico.setForeground(new java.awt.Color(251, 251, 251));
        edtTecnico.setText("Clique aqui para adicionar um Ténico.");
        edtTecnico.setLabelText("Técnico");
        edtTecnico.setLabelTextColor(new java.awt.Color(251, 251, 251));
        edtTecnico.setLineColor(new java.awt.Color(229, 9, 20));
        edtTecnico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                edtTecnicoMouseClicked(evt);
            }
        });

        chkPago.setBackground(new java.awt.Color(251, 251, 251));
        chkPago.setForeground(new java.awt.Color(251, 251, 251));
        chkPago.setText("Pago");

        javax.swing.GroupLayout panPreencherLayout = new javax.swing.GroupLayout(panPreencher);
        panPreencher.setLayout(panPreencherLayout);
        panPreencherLayout.setHorizontalGroup(
            panPreencherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panPreencherLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(edtValor, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(222, 222, 222))
            .addGroup(panPreencherLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panPreencherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(edtDescricaoProblema, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edtPeca, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panPreencherLayout.createSequentialGroup()
                        .addComponent(chkConcluido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(159, 159, 159)
                        .addComponent(chkPago, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(edtTecnico, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panPreencherLayout.setVerticalGroup(
            panPreencherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panPreencherLayout.createSequentialGroup()
                .addComponent(edtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edtDescricaoProblema, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edtTecnico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edtPeca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panPreencherLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkConcluido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        panTodosBotoes.setOpaque(false);

        btnEditar.setBackground(new java.awt.Color(51, 51, 51));
        btnEditar.setForeground(new java.awt.Color(251, 251, 251));
        btnEditar.setText("Editar");
        btnEditar.setBorderPainted(false);
        btnEditar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnEditar.setRadius(40);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnExcluir.setBackground(new java.awt.Color(51, 51, 51));
        btnExcluir.setForeground(new java.awt.Color(251, 251, 251));
        btnExcluir.setText("Excluir");
        btnExcluir.setBorderPainted(false);
        btnExcluir.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnExcluir.setRadius(40);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnCancelar.setBackground(new java.awt.Color(51, 51, 51));
        btnCancelar.setForeground(new java.awt.Color(251, 251, 251));
        btnCancelar.setText("Cancelar");
        btnCancelar.setBorderPainted(false);
        btnCancelar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnCancelar.setRadius(40);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnConfirmar.setBackground(new java.awt.Color(51, 51, 51));
        btnConfirmar.setForeground(new java.awt.Color(251, 251, 251));
        btnConfirmar.setText("Confirmar");
        btnConfirmar.setBorderPainted(false);
        btnConfirmar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnConfirmar.setRadius(40);
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        btnNovo.setBackground(new java.awt.Color(51, 51, 51));
        btnNovo.setForeground(new java.awt.Color(251, 251, 251));
        btnNovo.setText("Novo");
        btnNovo.setBorderPainted(false);
        btnNovo.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnNovo.setRadius(40);
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panTodosBotoesLayout = new javax.swing.GroupLayout(panTodosBotoes);
        panTodosBotoes.setLayout(panTodosBotoesLayout);
        panTodosBotoesLayout.setHorizontalGroup(
            panTodosBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panTodosBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panTodosBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panTodosBotoesLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(panTodosBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnNovo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnExcluir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCancelar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panTodosBotoesLayout.createSequentialGroup()
                        .addGroup(panTodosBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panTodosBotoesLayout.setVerticalGroup(
            panTodosBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panTodosBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        grdComputadores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(grdComputadores);

        javax.swing.GroupLayout panFundoLayout = new javax.swing.GroupLayout(panFundo);
        panFundo.setLayout(panFundoLayout);
        panFundoLayout.setHorizontalGroup(
            panFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panFundoLayout.createSequentialGroup()
                .addGroup(panFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panFundoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3))
                    .addGroup(panFundoLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(panTodosBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                        .addComponent(panPreencher, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(161, 161, 161)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panFundoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panFundoLayout.setVerticalGroup(
            panFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panFundoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panTodosBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panPreencher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        getContentPane().add(panFundo, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void edtValorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edtValorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_edtValorActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        ConsertoComputador consertoComputadorEditando = (ConsertoComputador) this.getObjetoSelecionadoNaGrid(grdComputadores);
        
        if(consertoComputadorEditando == null){
            JOptionPane.showMessageDialog(this, "Primeiro selecione um registro na tabela.");
        }else{
            this.limparCampos();
            this.habilitarCampos(true);
            this.preencherFormulario(consertoComputadorEditando);
            this.idConsertoComputadorEditando = consertoComputadorEditando.getId();         
        }  
  
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // TODO add your handling code here:
        ConsertoComputador consertoComputadorExcluido = (ConsertoComputador) this.getObjetoSelecionadoNaGrid(grdComputadores);

        if (consertoComputadorExcluido == null)
        JOptionPane.showMessageDialog(this, "Primeiro selecione um registro na tabela.");
        else {
            int response = JOptionPane.showConfirmDialog(null,
                "Deseja exlcuir o Tecnico  \n("
                + consertoComputadorExcluido.getId()+ ", "
                + consertoComputadorExcluido.getValor()+ ") ?",
                "Confirmar exclusão",
                JOptionPane.OK_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE);
            if (response == JOptionPane.OK_OPTION) {

                try {
                    consertoController.excluirConsertoComputador(consertoComputadorExcluido);

                    consertoController.atualizarTabela(grdComputadores);
                    JOptionPane.showMessageDialog(this, "Exclusão feita com sucesso!");
                } catch (ServicoException ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                }
            }
        }
 
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        this.idConsertoComputadorEditando = -1L;
        this.limparCampos();
        this.habilitarCampos(false);
        edtValor.setText(String.valueOf(100.0));

    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
        // TODO add your handling code here:
        try {
            if (idConsertoComputadorEditando > 0) {
                consertoController.atualizarConsertoComputador(
                        idConsertoComputadorEditando, tecnicoSelecionado, clienteSelecionado,
                        Float.parseFloat(edtValor.getText()), edtDescricaoProblema.getText(), 
                        data, chkConcluido.isSelected(), pecasSelecionadas, chkPago.isSelected());
            } else {
                consertoController.cadastrarConsertoComputador(idConsertoComputadorEditando, tecnicoSelecionado, 
                        clienteSelecionado, Float.parseFloat(edtValor.getText()), 
                        edtDescricaoProblema.getText(), data, chkConcluido.isSelected(), 
                        pecasSelecionadas, chkPago.isSelected());
            }
            //Comando bastante importante
            this.idConsertoComputadorEditando = -1L;
            
            if(chkPago.isSelected()){
                // Manda email
                //Email email = new Email(edtNome.getText(), fEdtEmail.getText(), "Pagamento confirmado", NtpTimeClient.dataAtualToString() + " em " + PublicIP.getPublicIpAdress(), "EmailAlteracaoCadastro.html");
            }

            this.limparCampos();
            this.habilitarCampos(false);
            consertoController.atualizarTabela(grdComputadores);
            this.limparCampos();
        } catch (ServicoException e) {
            System.err.println(e.getMessage());
            JOptionPane.showMessageDialog(this, e.getMessage());
        } catch (Exception ex) {
            Logger.getLogger(dlgCadastrarTecnico.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnConfirmarActionPerformed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        // TODO add your handling code here:
        this.habilitarCampos(true );
        
    }//GEN-LAST:event_btnNovoActionPerformed

    private void edtClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edtClienteActionPerformed
        // TODO add your handling code here:
        // Aqui

    }//GEN-LAST:event_edtClienteActionPerformed

    private void edtClienteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_edtClienteMousePressed
        // TODO add your handling code here:
        telaSelecaoCliente.setVisible(true);
        
        if(telaSelecaoCliente.getClienteEscolhido() != null){
            edtCliente.setText(telaSelecaoCliente.getClienteEscolhido().getNome() + ".");
            clienteSelecionado = telaSelecaoCliente.getClienteEscolhido();
        }
        
    }//GEN-LAST:event_edtClienteMousePressed

    private void edtClienteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_edtClienteFocusGained
        // TODO add your handling code here:

    }//GEN-LAST:event_edtClienteFocusGained

    private void edtTecnicoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_edtTecnicoMouseClicked
        // TODO add your handling code here:
        telaSelecaoTecnico.setVisible(true);
        
        if(telaSelecaoTecnico.getTecnicoEscolhido() != null){
            edtTecnico.setText(telaSelecaoTecnico.getTecnicoEscolhido().getNome() + ".");
            tecnicoSelecionado = telaSelecaoTecnico.getTecnicoEscolhido();
        }
        
    }//GEN-LAST:event_edtTecnicoMouseClicked

    private void edtPecaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_edtPecaMouseClicked
        // TODO add your handling code here:
        telaSelecaoPeca.setVisible(true);
        
        pecasSelecionadas = telaSelecaoPeca.getPecasSelecionadas();
        
        if(!pecasSelecionadas.isEmpty()){
            StringBuilder builder = new StringBuilder();
            int totalPecas = pecasSelecionadas.size();
            
            int i = 0;
            
            // Setando o nome das peças e atualizando o preco total
            for(Peca peca : telaSelecaoPeca.getPecasSelecionadas()){
                builder.append(peca.getNome());
                if (i < totalPecas - 1) {
                    builder.append(", "); // Adicione uma vírgula e espaço para todas as peças, exceto a última
                } else {
                    builder.append("."); // Adicione um ponto final para a última peça
                }

                i++;
                preco += peca.getPreco();
            }
            
            
            edtPeca.setText(builder.toString());
            
            
            // Mostrando o preço final na tela
            edtValor.setText(String.valueOf(preco));
        }
    }//GEN-LAST:event_edtPecaMouseClicked

    private void chkConcluidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkConcluidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkConcluidoActionPerformed

    public void habilitarCampos(boolean flag) {
        for (int i = 0; i < panPreencher.getComponents().length; i++) {
            panPreencher.getComponent(i).setVisible(flag);
        }    
    }
    
    private void limparCampos() {
        // Limpa os Edts
        edtDescricaoProblema.setText("");
        edtValor.setText(String.valueOf(preco));
        edtCliente.setText("Clique aqui para adicionar um Cliente.");
        edtTecnico.setText("Clique aqui para adicionar um Ténico.");
        edtPeca.setText("Clique aqui para adicionar uma ou mais Peça(s).");
        chkConcluido.setSelected(false);
        chkPago.setSelected(false);
        
    }
    
    private Object getObjetoSelecionadoNaGrid(JTable grd) {
        int rowCliked = grd.getSelectedRow();
        Object obj = null;
        if (rowCliked >= 0) {
            obj = grd.getModel().getValueAt(rowCliked, -1);
        }
        return obj;
    }
    
    
    private void preencherFormulario(ConsertoComputador consertoComputadorEditando) {
        // Preencha os campos com os dados do consertoComputadorEditando
        edtValor.setText(String.valueOf(consertoComputadorEditando.getValor()));
        edtDescricaoProblema.setText(consertoComputadorEditando.getDescricaoServico());

        // Obtenha o técnico associado ao ConsertoComputador
        tecnicoSelecionado = consertoComputadorEditando.getTecnicoResponsavel();

        // Obtenha o cliente associado ao ConsertoComputador
        clienteSelecionado = consertoComputadorEditando.getClienteAtendido();
        
        pecasSelecionadas = consertoComputadorEditando.getPecasSubstituidas();
        System.out.println(pecasSelecionadas);

        // Se o técnico não for nulo, selecione-o na grade de técnicos (grdTecnicos)

        if (tecnicoSelecionado != null) {
            edtTecnico.setText(tecnicoSelecionado.getNome() + ".");
        }

        // Se o cliente não for nulo, selecione-o na grade de clientes (grdClientes)
        if (clienteSelecionado != null) {
            edtCliente.setText(clienteSelecionado.getNome() + ".");
        }
        
        if(!pecasSelecionadas.isEmpty()){
            StringBuilder builder = new StringBuilder();
            int totalPecas = pecasSelecionadas.size();
            
            int i = 0;
            
            // Setando o nome das peças e atualizando o preco total
            for(Peca peca : pecasSelecionadas){
                builder.append(peca.getNome());
                if (i < totalPecas - 1) {
                    builder.append(", "); // Adicione uma vírgula e espaço para todas as peças, exceto a última
                } else {
                    builder.append("."); // Adicione um ponto final para a última peça
                }

                i++;
            }
            edtPeca.setText(builder.toString());
        }
       
        chkConcluido.setSelected(consertoComputadorEditando.isConcluido());
        chkPago.setSelected(consertoComputadorEditando.isPago());
    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private view.graphicElements.BotaoVermelho btnCancelar;
    private view.graphicElements.BotaoVermelho btnConfirmar;
    private view.graphicElements.BotaoVermelho btnEditar;
    private view.graphicElements.BotaoVermelho btnExcluir;
    private view.graphicElements.BotaoVermelho btnNovo;
    private view.graphicElements.JCheckBoxCustom chkConcluido;
    private view.graphicElements.JCheckBoxCustom chkPago;
    private view.graphicElements.TextField edtCliente;
    private view.graphicElements.TextField edtDescricaoProblema;
    private view.graphicElements.TextField edtPeca;
    private view.graphicElements.TextField edtTecnico;
    private view.graphicElements.TextField edtValor;
    private view.graphicElements.TableDark grdComputadores;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblTitulo1;
    private javax.swing.JPanel panFundo;
    private javax.swing.JPanel panPreencher;
    private javax.swing.JPanel panTodosBotoes;
    // End of variables declaration//GEN-END:variables


}

