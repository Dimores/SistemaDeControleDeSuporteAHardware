/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view;

import controller.ConsertoComputadorController;
import controller.PecaController;
import controller.ServicoController;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import model.Cliente;
import model.ConsertoComputador;
import model.Data;
import model.Peca;
import model.Tecnico;
import model.exceptions.ServicoException;

/**
 *
 * @author diego
 */
public class dlgCadastrarConsertoComputador extends javax.swing.JDialog {
    ServicoController servicoController;
    ConsertoComputadorController consertoController;
    PecaController pecaController;
    private Long idConsertoComputadorEditando;
    private String data;
    List<Peca> pecasSelecionadas;

    
    /**
     * Creates new form dlgCadastrarConcertoComputador
     * @param parent
     * @param modal
     */
    public dlgCadastrarConsertoComputador(java.awt.Dialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
        servicoController = new ServicoController();
        idConsertoComputadorEditando = -1L;
        servicoController.atualizarTabelaCliente(grdClientes);
        servicoController.atualizarTabelaTecnico(grdTecnicos);
        this.habilitarCampos(false);
        
        consertoController = new ConsertoComputadorController();
        
        pecaController = new PecaController();
        pecaController.atualizarTabela(grdPecas);
        

        data = Data.pegaDataSistema();
        
        consertoController.atualizarTabela(grdComputadores);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panTitulo = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        lblSelecaoCliente = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        grdClientes = new javax.swing.JTable();
        lblSelecaoTecnico = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        grdComputadores = new javax.swing.JTable();
        panProblema = new javax.swing.JPanel();
        lblDescreverProblema = new javax.swing.JLabel();
        edtDescricaoProblema = new javax.swing.JTextField();
        panPecasSubstituidas = new javax.swing.JPanel();
        lblSelecaoPeca = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        grdPecas = new javax.swing.JTable();
        chkConcluido = new view.graphicElements.JCheckBoxCustom();
        panBotoes = new javax.swing.JPanel();
        btnNovo = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnConfirmar = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        grdTecnicos = new javax.swing.JTable();
        lblComputadores = new javax.swing.JLabel();
        panValor = new javax.swing.JPanel();
        lblValor = new javax.swing.JLabel();
        edtValor = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblTitulo.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo.setText("Cadastrar Conserto Computador");

        javax.swing.GroupLayout panTituloLayout = new javax.swing.GroupLayout(panTitulo);
        panTitulo.setLayout(panTituloLayout);
        panTituloLayout.setHorizontalGroup(
            panTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitulo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panTituloLayout.setVerticalGroup(
            panTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panTituloLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                .addContainerGap())
        );

        lblSelecaoCliente.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSelecaoCliente.setText("Selecione o Cliente");

        grdClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        grdClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grdClientesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(grdClientes);

        lblSelecaoTecnico.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSelecaoTecnico.setText("Selecione o Técnico");

        grdComputadores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        grdComputadores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grdComputadoresMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(grdComputadores);

        lblDescreverProblema.setText("Descreva o problema:");

        edtDescricaoProblema.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout panProblemaLayout = new javax.swing.GroupLayout(panProblema);
        panProblema.setLayout(panProblemaLayout);
        panProblemaLayout.setHorizontalGroup(
            panProblemaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panProblemaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblDescreverProblema)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edtDescricaoProblema, javax.swing.GroupLayout.DEFAULT_SIZE, 673, Short.MAX_VALUE))
        );
        panProblemaLayout.setVerticalGroup(
            panProblemaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panProblemaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panProblemaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(edtDescricaoProblema, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addComponent(lblDescreverProblema, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblSelecaoPeca.setText("Selecione 0 ou muitas peças substituídas:");

        grdPecas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        grdPecas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grdPecasMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(grdPecas);

        chkConcluido.setBackground(new java.awt.Color(20, 20, 20));
        chkConcluido.setText("Concluido");

        javax.swing.GroupLayout panPecasSubstituidasLayout = new javax.swing.GroupLayout(panPecasSubstituidas);
        panPecasSubstituidas.setLayout(panPecasSubstituidasLayout);
        panPecasSubstituidasLayout.setHorizontalGroup(
            panPecasSubstituidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panPecasSubstituidasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panPecasSubstituidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblSelecaoPeca)
                    .addComponent(chkConcluido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panPecasSubstituidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panPecasSubstituidasLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)))
        );
        panPecasSubstituidasLayout.setVerticalGroup(
            panPecasSubstituidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panPecasSubstituidasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSelecaoPeca)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 121, Short.MAX_VALUE)
                .addComponent(chkConcluido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(panPecasSubstituidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panPecasSubstituidasLayout.createSequentialGroup()
                    .addGap(35, 35, 35)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        panBotoes.setLayout(new javax.swing.BoxLayout(panBotoes, javax.swing.BoxLayout.LINE_AXIS));

        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });
        panBotoes.add(btnNovo);

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        panBotoes.add(btnEditar);

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });
        panBotoes.add(btnExcluir);

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        panBotoes.add(btnCancelar);

        btnConfirmar.setText("Confirmar");
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });
        panBotoes.add(btnConfirmar);

        grdTecnicos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        grdTecnicos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grdTecnicosMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(grdTecnicos);

        lblComputadores.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblComputadores.setText("Computadores");

        lblValor.setText("Preço:");

        javax.swing.GroupLayout panValorLayout = new javax.swing.GroupLayout(panValor);
        panValor.setLayout(panValorLayout);
        panValorLayout.setHorizontalGroup(
            panValorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panValorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblValor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(edtValor))
        );
        panValorLayout.setVerticalGroup(
            panValorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panValorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panValorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblValor, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblComputadores, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblSelecaoTecnico, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addComponent(panProblema, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panPecasSubstituidas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4)
                    .addComponent(lblSelecaoCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panValor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblSelecaoCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSelecaoTecnico)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panProblema, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panPecasSubstituidas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(lblComputadores)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void grdClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grdClientesMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_grdClientesMouseClicked

    private void grdComputadoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grdComputadoresMouseClicked

    }//GEN-LAST:event_grdComputadoresMouseClicked

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        this.idConsertoComputadorEditando = -1L;
        this.limparCampos();
        this.habilitarCampos(false);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        // TODO add your handling code here:
        this.habilitarCampos(true );
    }//GEN-LAST:event_btnNovoActionPerformed

    private void grdTecnicosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grdTecnicosMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_grdTecnicosMouseClicked

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
        // TODO add your handling code here:
        Tecnico tecnicoEscolhido = (Tecnico) getObjetoSelecionadoNaGrid(grdTecnicos);
        Cliente clienteEscolhido = (Cliente) getObjetoSelecionadoNaGrid(grdClientes);
        
        
        try {
            if (idConsertoComputadorEditando > 0) {
                consertoController.atualizarConsertoComputador(idConsertoComputadorEditando, tecnicoEscolhido, clienteEscolhido, Float.parseFloat(edtValor.getText()), edtDescricaoProblema.getText(), data, chkConcluido.isSelected(), pecasSelecionadas);
            } else {
                consertoController.cadastrarConsertoComputador(idConsertoComputadorEditando, tecnicoEscolhido, clienteEscolhido, Float.parseFloat(edtValor.getText()), edtDescricaoProblema.getText(), data, chkConcluido.isSelected(), pecasSelecionadas);
            }
            //Comando bastante importante
            this.idConsertoComputadorEditando = -1L;

            consertoController.atualizarTabela(grdComputadores);
            this.limparCampos();
        } catch (ServicoException e) {
            System.err.println(e.getMessage());
            JOptionPane.showMessageDialog(this, e.getMessage());
        } catch (Exception ex) {
            Logger.getLogger(dlgCadastrarTecnico.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnConfirmarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        ConsertoComputador consertoComputadorEditando = (ConsertoComputador) this.getObjetoSelecionadoNaGrid(grdComputadores);
        
        if(consertoComputadorEditando == null){
            JOptionPane.showMessageDialog(this, "Primeiro selecione um registro na tabela.");
        }else{
            this.limparCampos();
            this.habilitarCampos(true);
            this.preencherFormulario(consertoComputadorEditando);
            this.idConsertoComputadorEditando = consertoComputadorEditando.getId();         
        }  
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // TODO add your handling code here:
        ConsertoComputador consertoComputadorExcluido = (ConsertoComputador) this.getObjetoSelecionadoNaGrid(grdComputadores);

        if (consertoComputadorExcluido == null)
        JOptionPane.showMessageDialog(this, "Primeiro selecione um registro na tabela.");
        else {
            int response = JOptionPane.showConfirmDialog(null,
                "Deseja exlcuir o Tecnico  \n("
                + consertoComputadorExcluido.getId()+ ", "
                + consertoComputadorExcluido.getValor()+ ") ?",
                "Confirmar exclusão",
                JOptionPane.OK_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE);
            if (response == JOptionPane.OK_OPTION) {

                try {
                    consertoController.excluirConsertoComputador(consertoComputadorExcluido);

                    consertoController.atualizarTabela(grdComputadores);
                    JOptionPane.showMessageDialog(this, "Exclusão feita com sucesso!");
                } catch (ServicoException ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                }
            }
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void grdPecasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grdPecasMouseClicked
        // TODO add your handling code here:
        pecasSelecionadas = getObjetosSelecionadosNaGrid();
        


        if (!pecasSelecionadas.isEmpty()) {
            System.out.println("Peças Selecionadas:");
            for (Peca peca : pecasSelecionadas) {
                System.out.println(peca.getNome());
            }
        } else {
            System.out.println("Nenhuma peça selecionada.");
        }
    }//GEN-LAST:event_grdPecasMouseClicked

    public void habilitarCampos(boolean flag) {
        // Labels
        lblDescreverProblema.setEnabled(flag);
        lblSelecaoCliente.setEnabled(flag);
        lblSelecaoTecnico.setEnabled(flag);
        lblSelecaoPeca.setEnabled(flag);
        lblComputadores.setEnabled(flag);
        lblValor.setEnabled(flag);
        
        // Grids
        grdClientes.setEnabled(flag);
        grdClientes.setVisible(flag);
        grdPecas.setEnabled(flag);
        grdPecas.setVisible(flag);
        grdTecnicos.setEnabled(flag);
        grdTecnicos.setVisible(flag);
        grdComputadores.setEnabled(flag);
        grdComputadores.setVisible(flag);
        
        // Text Fields
        edtDescricaoProblema.setEnabled(flag);
        edtValor.setEnabled(flag);
        
        // List
        //lstPecasSubstituidas.setEnabled(flag);        
    }
    
    private void limparCampos() {
        // Limpa os Edts
        edtDescricaoProblema.setText("");
        edtValor.setText("");
    }
    
    private Object getObjetoSelecionadoNaGrid(JTable grd) {
        int rowCliked = grd.getSelectedRow();
        Object obj = null;
        if (rowCliked >= 0) {
            obj = grd.getModel().getValueAt(rowCliked, -1);
        }
        return obj;
    }
    
    private List<Peca> getObjetosSelecionadosNaGrid() {
        int[] selectedRows = grdPecas.getSelectedRows();
        List<Peca> objetosSelecionados = new ArrayList<>();

        for (int row : selectedRows) {
            Object obj = grdPecas.getModel().getValueAt(row, -1); // Substitua o índice da coluna de acordo com sua necessidade
            if (obj != null) {
                objetosSelecionados.add((Peca)(obj));
                
            }
        }

        return objetosSelecionados;
    }
    
    private void preencherFormulario(ConsertoComputador consertoComputadorEditando) {
        // Preencha os campos com os dados do consertoComputadorEditando
        edtValor.setText(String.valueOf(consertoComputadorEditando.getValor()));
        edtDescricaoProblema.setText(consertoComputadorEditando.getDescricaoServico());

        // Obtenha o técnico associado ao ConsertoComputador
        Tecnico tecnicoEscolhido = consertoComputadorEditando.getTecnicoResponsavel();

        // Obtenha o cliente associado ao ConsertoComputador
        Cliente clienteEscolhido = consertoComputadorEditando.getClienteAtendido();

        // Se o técnico não for nulo, selecione-o na grade de técnicos (grdTecnicos)
        if (tecnicoEscolhido != null) {
            for (int i = 0; i < grdTecnicos.getRowCount(); i++) {
                Tecnico tecnicoNaGrade = (Tecnico) grdTecnicos.getValueAt(i, -1); // Substitua o índice da coluna de acordo com sua necessidade
                if (tecnicoNaGrade != null && tecnicoNaGrade.getId() == tecnicoEscolhido.getId()) {
                    grdTecnicos.setRowSelectionInterval(i, i); // Seleciona a linha correspondente ao técnico
                    break;
                }
            }
        }

        // Se o cliente não for nulo, selecione-o na grade de clientes (grdClientes)
        if (clienteEscolhido != null) {
            for (int i = 0; i < grdClientes.getRowCount(); i++) {
                Cliente clienteNaGrade = (Cliente) grdClientes.getValueAt(i, -1); // Substitua o índice da coluna de acordo com sua necessidade
                if (clienteNaGrade != null && clienteNaGrade.getId() == clienteEscolhido.getId()) {
                    grdClientes.setRowSelectionInterval(i, i); // Seleciona a linha correspondente ao cliente
                    break;
                }
            }
        }
        
        chkConcluido.setSelected(consertoComputadorEditando.isConcluido());
    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnNovo;
    private view.graphicElements.JCheckBoxCustom chkConcluido;
    private javax.swing.JTextField edtDescricaoProblema;
    private javax.swing.JTextField edtValor;
    private javax.swing.JTable grdClientes;
    private javax.swing.JTable grdComputadores;
    private javax.swing.JTable grdPecas;
    private javax.swing.JTable grdTecnicos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblComputadores;
    private javax.swing.JLabel lblDescreverProblema;
    private javax.swing.JLabel lblSelecaoCliente;
    private javax.swing.JLabel lblSelecaoPeca;
    private javax.swing.JLabel lblSelecaoTecnico;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JLabel lblValor;
    private javax.swing.JPanel panBotoes;
    private javax.swing.JPanel panPecasSubstituidas;
    private javax.swing.JPanel panProblema;
    private javax.swing.JPanel panTitulo;
    private javax.swing.JPanel panValor;
    // End of variables declaration//GEN-END:variables


}
