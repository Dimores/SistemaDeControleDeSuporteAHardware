/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view;

import controller.ServicoController;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import model.Servico;

/**
 *
 * @author ruiz
 */
public class dlgHistoricoAtendimentosCliente extends javax.swing.JDialog {

    ServicoController servicoController;
    dlgPix telaPix;

    /**
     * Creates new form dlgHistoricoAtendimentos
     */
    public dlgHistoricoAtendimentosCliente(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        try {
            telaPix = new dlgPix(this, modal);
        } catch (Exception ex) {
            Logger.getLogger(dlgHistoricoAtendimentosCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public dlgHistoricoAtendimentosCliente(java.awt.Dialog parent, boolean modal, Long id) {
        super(parent, modal);
        initComponents();
        servicoController = new ServicoController();
        servicoController.atualizarTabela(grdHistóricoServico, id);
        try {
            telaPix = new dlgPix(this, modal);
        } catch (Exception ex) {
            Logger.getLogger(dlgHistoricoAtendimentosCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panFundo = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        grdHistóricoServico = new view.graphicElements.TableDark();
        lblTitulo = new javax.swing.JLabel();
        btnCancelar = new view.graphicElements.BotaoVermelho();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        panFundo.setBackground(new java.awt.Color(20, 20, 20));

        grdHistóricoServico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        grdHistóricoServico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grdHistóricoServicoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(grdHistóricoServico);

        lblTitulo.setBackground(new java.awt.Color(20, 20, 20));
        lblTitulo.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(251, 251, 251));
        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo.setText("Histórico de Atendimentos");

        btnCancelar.setBackground(new java.awt.Color(51, 51, 51));
        btnCancelar.setForeground(new java.awt.Color(251, 251, 251));
        btnCancelar.setText("Sair");
        btnCancelar.setBorderPainted(false);
        btnCancelar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnCancelar.setRadius(40);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panFundoLayout = new javax.swing.GroupLayout(panFundo);
        panFundo.setLayout(panFundoLayout);
        panFundoLayout.setHorizontalGroup(
            panFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, 820, Short.MAX_VALUE)
            .addGroup(panFundoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panFundoLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panFundoLayout.setVerticalGroup(
            panFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panFundoLayout.createSequentialGroup()
                .addComponent(lblTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        getContentPane().add(panFundo, java.awt.BorderLayout.PAGE_START);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void grdHistóricoServicoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grdHistóricoServicoMouseClicked
        Servico servicoSelecionado = (Servico) this.getObjetoSelecionadoNaGrid();
        try {
            if (servicoSelecionado.isPago() == false) {
                telaPix.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "Este Serviço já foi pago");
            }

        } catch (Exception e) {
            Logger.getLogger(dlgHistoricoAtendimentosCliente.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_grdHistóricoServicoMouseClicked

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private view.graphicElements.BotaoVermelho btnCancelar;
    private view.graphicElements.TableDark grdHistóricoServico;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JPanel panFundo;
    // End of variables declaration//GEN-END:variables

    private Object getObjetoSelecionadoNaGrid() {
        int rowCliked = grdHistóricoServico.getSelectedRow();
        Object obj = null;
        if (rowCliked >= 0) {
            obj = grdHistóricoServico.getModel().getValueAt(rowCliked, -1);
        }
        return obj;
    }
}
